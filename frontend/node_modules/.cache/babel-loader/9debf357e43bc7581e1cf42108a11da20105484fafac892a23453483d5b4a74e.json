{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const menuAPI = {\n  getAll: (params = {}) => api.get('/menu', {\n    params\n  }),\n  getById: id => api.get(`/menu/${id}`),\n  create: data => api.post('/menu', data),\n  update: (id, data) => api.put(`/menu/${id}`, data),\n  delete: id => api.delete(`/menu/${id}`),\n  getCategories: () => api.get('/menu/categories/list'),\n  updateStock: (id, data) => api.patch(`/menu/${id}/stock`, data)\n};\nexport const ordersAPI = {\n  getAll: (params = {}) => api.get('/orders', {\n    params\n  }),\n  getById: id => api.get(`/orders/${id}`),\n  create: data => api.post('/orders', data),\n  updateStatus: (id, status) => api.put(`/orders/${id}/status`, {\n    status\n  }),\n  cancel: id => api.delete(`/orders/${id}`),\n  getByNumber: orderNumber => api.get(`/orders/number/${orderNumber}`),\n  getByCustomer: phone => api.get(`/orders/customer/${phone}`),\n  getStats: () => api.get('/orders/stats/summary')\n};\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","console","data","message","menuAPI","getAll","params","get","getById","id","post","update","put","delete","getCategories","updateStock","patch","ordersAPI","updateStatus","status","cancel","getByNumber","orderNumber","getByCustomer","phone","getStats","healthAPI","check"],"sources":["C:/Users/shekh/OneDrive/Desktop/canteen/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const menuAPI = {\r\n  getAll: (params = {}) => api.get('/menu', { params }),\r\n  getById: (id) => api.get(`/menu/${id}`),\r\n  create: (data) => api.post('/menu', data),\r\n  update: (id, data) => api.put(`/menu/${id}`, data),\r\n  delete: (id) => api.delete(`/menu/${id}`),\r\n  getCategories: () => api.get('/menu/categories/list'),\r\n  updateStock: (id, data) => api.patch(`/menu/${id}/stock`, data),\r\n};\r\n\r\nexport const ordersAPI = {\r\n  getAll: (params = {}) => api.get('/orders', { params }),\r\n  getById: (id) => api.get(`/orders/${id}`),\r\n  create: (data) => api.post('/orders', data),\r\n  updateStatus: (id, status) => api.put(`/orders/${id}/status`, { status }),\r\n  cancel: (id) => api.delete(`/orders/${id}`),\r\n  getByNumber: (orderNumber) => api.get(`/orders/number/${orderNumber}`),\r\n  getByCustomer: (phone) => api.get(`/orders/customer/${phone}`),\r\n  getStats: () => api.get('/orders/stats/summary'),\r\n};\r\n\r\nexport const healthAPI = {\r\n  check: () => api.get('/health'),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}