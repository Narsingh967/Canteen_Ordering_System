{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst axiosInstance = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\naxiosInstance.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API objects\nexport const menuAPI = {\n  getAll: () => axiosInstance.get('/menu'),\n  getById: id => axiosInstance.get(`/menu/${id}`),\n  getCategories: () => axiosInstance.get('/menu/categories/list'),\n  create: data => axiosInstance.post('/menu', data),\n  update: (id, data) => axiosInstance.put(`/menu/${id}`, data),\n  delete: id => axiosInstance.delete(`/menu/${id}`),\n  updateStock: (id, stock) => axiosInstance.patch(`/menu/${id}/stock`, {\n    stock\n  }),\n  toggleAvailability: id => axiosInstance.patch(`/menu/${id}/availability`)\n};\nexport const ordersAPI = {\n  getAll: () => axiosInstance.get('/orders'),\n  getById: id => axiosInstance.get(`/orders/${id}`),\n  getByNumber: orderNumber => axiosInstance.get(`/orders/number/${orderNumber}`),\n  getByCustomer: phone => axiosInstance.get(`/orders/customer/${phone}`),\n  getStats: () => axiosInstance.get('/orders/stats/summary'),\n  create: data => axiosInstance.post('/orders', data),\n  updateStatus: (id, status) => axiosInstance.put(`/orders/${id}/status`, {\n    status\n  }),\n  cancel: id => axiosInstance.delete(`/orders/${id}`)\n};\nexport const authAPI = axiosInstance;\nexport const paymentAPI = {\n  createPaymentIntent: (orderId, amount) => axiosInstance.post('/payment/create-payment-intent', {\n    orderId,\n    amount\n  }),\n  confirmPayment: (orderId, paymentIntentId, paymentMethod) => axiosInstance.post('/payment/confirm-payment', {\n    orderId,\n    paymentIntentId,\n    paymentMethod\n  }),\n  getStatus: orderId => axiosInstance.get(`/payment/status/${orderId}`),\n  refund: orderId => axiosInstance.post(`/payment/refund/${orderId}`)\n};\nexport const healthAPI = {\n  check: () => axiosInstance.get('/health')\n};\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","menuAPI","getAll","get","getById","id","getCategories","data","post","update","put","delete","updateStock","stock","patch","toggleAvailability","ordersAPI","getByNumber","orderNumber","getByCustomer","phone","getStats","updateStatus","cancel","authAPI","paymentAPI","createPaymentIntent","orderId","amount","confirmPayment","paymentIntentId","paymentMethod","getStatus","refund","healthAPI","check"],"sources":["C:/Users/shekh/OneDrive/Desktop/canteen/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst axiosInstance = axios.create({\r\n  baseURL: '/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor to add auth token\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API objects\r\nexport const menuAPI = {\r\n  getAll: () => axiosInstance.get('/menu'),\r\n  getById: (id) => axiosInstance.get(`/menu/${id}`),\r\n  getCategories: () => axiosInstance.get('/menu/categories/list'),\r\n  create: (data) => axiosInstance.post('/menu', data),\r\n  update: (id, data) => axiosInstance.put(`/menu/${id}`, data),\r\n  delete: (id) => axiosInstance.delete(`/menu/${id}`),\r\n  updateStock: (id, stock) => axiosInstance.patch(`/menu/${id}/stock`, { stock }),\r\n  toggleAvailability: (id) => axiosInstance.patch(`/menu/${id}/availability`)\r\n};\r\n\r\nexport const ordersAPI = {\r\n  getAll: () => axiosInstance.get('/orders'),\r\n  getById: (id) => axiosInstance.get(`/orders/${id}`),\r\n  getByNumber: (orderNumber) => axiosInstance.get(`/orders/number/${orderNumber}`),\r\n  getByCustomer: (phone) => axiosInstance.get(`/orders/customer/${phone}`),\r\n  getStats: () => axiosInstance.get('/orders/stats/summary'),\r\n  create: (data) => axiosInstance.post('/orders', data),\r\n  updateStatus: (id, status) => axiosInstance.put(`/orders/${id}/status`, { status }),\r\n  cancel: (id) => axiosInstance.delete(`/orders/${id}`)\r\n};\r\n\r\nexport const authAPI = axiosInstance;\r\n\r\nexport const paymentAPI = {\r\n  createPaymentIntent: (orderId, amount) => \r\n    axiosInstance.post('/payment/create-payment-intent', { orderId, amount }),\r\n  confirmPayment: (orderId, paymentIntentId, paymentMethod) => \r\n    axiosInstance.post('/payment/confirm-payment', { orderId, paymentIntentId, paymentMethod }),\r\n  getStatus: (orderId) => axiosInstance.get(`/payment/status/${orderId}`),\r\n  refund: (orderId) => axiosInstance.post(`/payment/refund/${orderId}`)\r\n};\r\n\r\nexport const healthAPI = {\r\n  check: () => axiosInstance.get('/health')\r\n};\r\n\r\nexport default axiosInstance; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}